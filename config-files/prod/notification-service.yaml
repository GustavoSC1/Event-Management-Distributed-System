server:
  port: ${PORT}
  
spring:
  datasource:
    url: ${PROD_DB_URL}
    username: ${PROD_DB_USERNAME}
    password: ${PROD_DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
      dialect: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        show_sql: true
  output:
    ansi:
      enabled: Always
  rabbitmq:
    host: ${PROD_AMQP_HOST}
    port: ${PROD_AMQP_PORT}
    username: ${PROD_AMQP_USERNAME}
    password: ${PROD_AMQP_PASSWORD}

eureka:
  client:
    serviceUrl:
      defaultZone: ${PROD_EUREKA_DEFAULTZONE}
      
rabbitmq:
  exchange:
    notificationExchange:  notifications.v1.notification_created
    paymentMadeExchange: payments.v1.payment_made
  queue:
    notificationQueue: notifications.v1.notification_created.send_notification
    paymentMadeQueue: payments.v1.payment_made.send_confirmation_to_notification
  key:
    notificationKey: notifications.v1.notification_created.send_notification.key
    
jwt:
  expiration: 3600000
  refreshExpiration: 86400000
  public:
    key: 'classpath:app.pub'
    
management:
  zipkin:
    tracing:
      endpoint: ${PROD_ZIPKIN_TRACING_ENDPOINT}
  endpoints:
    web:
      exposure:
        include:
          - health
  tracing:
    sampling:
      probability: 0.05
      
logging:
  level:
    com:
      gustavo:
        notificationservice: DEBUG
    
