version: '3.8'

services:   
  rabbitmq:
    image: rabbitmq:3.12.0-management
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ../rabbitmq:/var/lib/rabbitmq/
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    networks:
      - microservices-network
      
  zipkin:
    image: openzipkin/zipkin:3.0.6
    ports:
      - 9411:9411
    restart: always
    depends_on:
      - rabbitmq
    environment:
      RABBIT_URI: amqp://user:password@rabbitmq:5672
    networks:
      - microservices-network
  
  user-db:
    image: postgres:latest
    container_name: user-db
    ports:
      - 5432:5432
    restart: always
    environment:
      POSTGRES_DB: db-user
      POSTGRES_USER: user
      POSTGRES_PASSWORD: root
    volumes:
      - ../postgres-user:/var/lib/postgresql/data
    networks:
      - microservices-network
  
  event-db:
    image: postgres:latest
    container_name: event-db
    ports:
      - 5434:5432
    restart: always
    environment:
      POSTGRES_DB: db-event
      POSTGRES_USER: user
      POSTGRES_PASSWORD: root
    volumes:
      - ../postgres-event:/var/lib/postgresql/data
    networks:
      - microservices-network

  notification-db:
    image: postgres:latest
    container_name: notification-db
    ports:
      - 5436:5432
    restart: always
    environment:
      POSTGRES_DB: db-notification
      POSTGRES_USER: user
      POSTGRES_PASSWORD: root
    volumes:
      - ../postgres-notification:/var/lib/postgresql/data
    networks:
      - microservices-network
      
  payment-db:
    image: postgres:latest
    container_name: payment-db
    ports:
      - 5438:5432
    restart: always
    environment:
      POSTGRES_DB: db-payment
      POSTGRES_USER: user
      POSTGRES_PASSWORD: root
    volumes:
      - ../postgres-payment:/var/lib/postgresql/data
    networks:
      - microservices-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: user@localhost.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - 5050:80
    volumes:
      - ../pgadmin:/var/lib/pgadmin
    networks:
      - microservices-network 

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: elasticsearch
    restart: always
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      discovery.type: "single-node"
      bootstrap.memory_lock: true
      xpack.security.enabled: false
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ../esdata:/usr/share/elasticsearch/data
    networks:
      - microservices-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.2
    container_name: kibana
    restart: always
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
      - elasticsearch
    networks:
      - microservices-network

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.12.2
    container_name: filebeat
    entrypoint: filebeat -e -strict.perms=false
    user: root
    restart: always
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./user-service/logs:/usr/share/filebeat/logs/user-service:ro
      - ./event-service/logs:/usr/share/filebeat/logs/event-service:ro
      - ./payment-service/logs:/usr/share/filebeat/logs/payment-service:ro
      - ./notification-service/logs:/usr/share/filebeat/logs/notification-service:ro
    depends_on:
      - elasticsearch
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge
